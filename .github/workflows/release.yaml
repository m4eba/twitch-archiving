name: release

on:
  push:
    branches:
      - dev/**
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: microservices
          - name: tools
          - name: api
    steps:
      - uses: actions/checkout@v2
      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          buildkitd-flags: '--debug'
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Prepare
        id: prep
        run: |
          VERSION=sha-${GITHUB_SHA::8}
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF/refs\/tags\//}
            VERSION_TAG="docker.io/m4eba/twitch-archiving-${{ matrix.name }}:${VERSION}"
            LATEST_TAG="docker.io/m4eba/twitch-archiving-${{ matrix.name }}:latest"
          else
            VERSION_TAG=""
            LATEST_TAG=""
          fi
          echo "BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_ENV
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "VERSION_TAG=${VERSION_TAG}" >> $GITHUB_ENV
          echo "LATEST_TAG=${LATEST_TAG}" >> $GITHUB_ENV

      - name: Publish image
        uses: docker/build-push-action@v2
        with:
          push: true
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./${{ matrix.name }}/Dockerfile
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.VERSION_TAG }}
            ${{ env.LATEST_TAG }}
          labels: |
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.source=${{ github.event.repository.html_url }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.version=${{ env.VERSION }}
            org.opencontainers.image.created=${{ env.BUILD_DATE }}
